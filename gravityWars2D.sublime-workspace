{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Trail",
				"TrailRenderList"
			],
			[
				"for",
				"foreach	ForEach"
			],
			[
				"GetComp",
				"GetComponentsInChildren	type"
			],
			[
				"Fad",
				"FadeChildTrails"
			],
			[
				"Add",
				"AddComponent	componentType"
			],
			[
				"torp",
				"torpedoTrailsPanel"
			],
			[
				"line",
				"lineColor"
			],
			[
				"path",
				"pathLine"
			],
			[
				"drag",
				"dragVector"
			],
			[
				"velo",
				"velocityVector"
			],
			[
				"velocity",
				"velocityVector"
			],
			[
				"Vec",
				"VectorLine"
			],
			[
				"phys",
				"physicsEngineA"
			],
			[
				"play",
				"playerColor"
			],
			[
				"playerState",
				"playerStateScript"
			],
			[
				"tra",
				"trailRendererParent"
			],
			[
				"draw",
				"drawLine"
			],
			[
				"Fin",
				"FindWithTag	tag"
			],
			[
				"drawL",
				"drawLineScript"
			],
			[
				"parent",
				"parentFlag"
			],
			[
				"paret",
				"parentFlag"
			],
			[
				"g",
				"generalMultiplierMemory"
			],
			[
				"fi",
				"field"
			],
			[
				"generalMultiplier",
				"generalMultiplierMemory"
			],
			[
				"pla",
				"planetInfo"
			],
			[
				"pl",
				"planetMeta"
			],
			[
				"field",
				"fieldStrength"
			],
			[
				"I",
				"IFieldFunction2D"
			],
			[
				"force",
				"forceOfField"
			],
			[
				"For",
				"ForceField2D"
			],
			[
				"rand",
				"randFloaty"
			],
			[
				"randomP",
				"randomPositionVector"
			],
			[
				"radiu",
				"radiusLimit"
			],
			[
				"rad",
				"radiusLimit"
			],
			[
				"Clam",
				"ClampMagnitude	vector, maxLength"
			],
			[
				"t",
				"transform"
			],
			[
				"acti",
				"activePlayer"
			],
			[
				"act",
				"activePlayerScript"
			],
			[
				"playerS",
				"playerStateScript"
			],
			[
				"target",
				"targetingMemoryList"
			],
			[
				"pa",
				"playerTargetingPanel_B"
			],
			[
				"playerTargetin",
				"playerTargetingPanel_A"
			],
			[
				"targeting",
				"targeting_panel"
			],
			[
				"GetC",
				"GetComponent	type"
			],
			[
				"targ",
				"targetingPanelCreateMemory"
			],
			[
				"targetingM",
				"targetingMemoryList"
			],
			[
				"targetin",
				"targetingPanel"
			],
			[
				"Set",
				"SetActive	value"
			],
			[
				"Ve",
				"VectorGrid"
			],
			[
				"ta",
				"targetingPanel_B_CanvasGroup"
			],
			[
				"tar",
				"targetingPanel_A_CanvasGroup"
			],
			[
				"targetingPanel",
				"targetingPanel_A_CanvasGroup"
			],
			[
				"targeti",
				"targetingPanel_B"
			],
			[
				"update",
				"updateValues"
			],
			[
				"var",
				"variableTwo"
			],
			[
				"old",
				"oldTargetingAngle"
			],
			[
				"Vector",
				"Vector3	x, y, z"
			],
			[
				"north",
				"northVector"
			],
			[
				"Wai",
				"WaitForSeconds"
			],
			[
				"camer",
				"cameraDefaultScale"
			],
			[
				"Start",
				"StartCoroutine"
			],
			[
				"d",
				"defaultCenterOfInterest"
			],
			[
				"reset",
				"resetCameraScript"
			],
			[
				"ship",
				"shipCenterWeighting"
			],
			[
				"player",
				"playerTwo"
			],
			[
				"playerOn",
				"playerOnePosition"
			],
			[
				"Get",
				"GetComponent	type"
			],
			[
				"gameC",
				"gameCenter"
			],
			[
				"gameCenter",
				"gameCenterScript"
			],
			[
				"Vect",
				"Vector3	x, y, z"
			],
			[
				"game",
				"gameObject"
			],
			[
				"GetCom",
				"GetComponentInChildren	type"
			],
			[
				"smooth",
				"smoothOut"
			],
			[
				"Find",
				"Find	name"
			],
			[
				"GetComponent",
				"GetComponent	GameObject.*<T>()"
			],
			[
				"ortho",
				"orthographicSize	Camera.*"
			],
			[
				"delta",
				"deltaTime	Time.*"
			],
			[
				"firstPos",
				"firstPos-worldPos"
			],
			[
				"Length",
				"length"
			],
			[
				"playerObject",
				"playerObject2"
			],
			[
				"arra",
				"array.Add	*()"
			],
			[
				"add",
				"add	Array.*()"
			],
			[
				"BoxCollid",
				"BoxCollider2D	[class]"
			],
			[
				"borderM",
				"borderMargin"
			],
			[
				"wai",
				"waiting"
			],
			[
				"Wait",
				"WaitForSeconds	*(seconds)"
			],
			[
				"Game",
				"GameObject	*(name)"
			],
			[
				"_m",
				"_mainGUICanvasGroup"
			],
			[
				"debu",
				"debug.Log	*(message)"
			],
			[
				"torpedo",
				"torpedoDestroy"
			],
			[
				"deb",
				"debug.Log	*(message)"
			],
			[
				"turn",
				"turnSpeedSet"
			],
			[
				"turnS",
				"turnSpeed"
			],
			[
				"turnSp",
				"turnSpeedSet"
			],
			[
				"HideIn",
				"HideInInspector	[class]"
			],
			[
				"player1",
				"player1Switch"
			],
			[
				"playerObj",
				"playerObject2"
			],
			[
				"SendMe",
				"SendMessage	GameObject.*(methodName, value, options)"
			],
			[
				"Send",
				"SendMessage	methodName, value, options"
			],
			[
				"boo",
				"boolean	ProceduralPropertyType.*"
			],
			[
				"GetMous",
				"GetMouseButtonDown	Input.*(button)"
			],
			[
				"tran",
				"transform	[class]"
			],
			[
				"transform",
				"transform	GameObject.*"
			],
			[
				"gameOb",
				"gameObject	[class]"
			],
			[
				"FindWi",
				"FindWithTag	tag"
			],
			[
				"scene",
				"sceneManager"
			],
			[
				"OnMou",
				"OnMouseDown	MonoBehaviour.*()"
			],
			[
				"OnM",
				"OnMouseDown	MonoBehaviour.*()"
			],
			[
				"IgnoreLa",
				"IgnoreLayerCollision	Physics2D.*(layer1, layer2, ignore)"
			],
			[
				"floa",
				"float	PropType.*"
			],
			[
				"sma",
				"smallestSize	(global, instance)"
			],
			[
				"smal",
				"smallestList	(global, instance)"
			],
			[
				"smalle",
				"smallestList"
			],
			[
				"small",
				"smallestSize	(global, instance)"
			],
			[
				"sum",
				"sumList	(global, instance)"
			],
			[
				"list",
				"listNumbers	(global, instance)"
			],
			[
				"cm",
				"cmds"
			],
			[
				"Inter",
				"InternalMove"
			],
			[
				"QA",
				"QAbstractItemView"
			],
			[
				"setIcon",
				"setIconSize"
			],
			[
				"main",
				"mainGrid"
			],
			[
				"QGra",
				"QGraphicsEllipseItem"
			],
			[
				"Qt",
				"QtGui"
			],
			[
				"Draw",
				"DrawWidget	(global, class)"
			],
			[
				"text",
				"textChanged"
			],
			[
				"may",
				"mayaRun	(global, function)"
			],
			[
				"test",
				"testWidget	(attribute, instance)"
			],
			[
				"FileRea",
				"FileReaderWidget	(imported, class)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/scripts/TrailRender.cs",
			"settings":
			{
				"buffer_size": 2698,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/scripts/CreateTrail.cs",
			"settings":
			{
				"buffer_size": 396,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "using UnityEngine;\nusing UnityEngine.UI;\n\nusing System.Collections;\nusing System.Collections.Generic;\n\nusing Vectrosity;\n\npublic class TrailManager : MonoBehaviour {\n	public Texture lineTex;\n	public Color lineColor;\n	public float lineWidth = 12.0f;\n	public float textureScale = 1f;\n	public bool fetchColor = false;\n\n	int maxPoints = 500000;\n	bool continuousUpdate = true;\n\n	private VectorLine pathLine;\n	private int pathIndex = 0;\n	//private GameObject torpedoTrailsPanel;\n	private bool initiator = true;\n	private FadeChildTrails fadeChildTrails;\n	private int numberofTrails = 1;\n\n	//FetchColor\n	GameObject gameManager;\n\n	private playerState playerStateScript;\n	private string activePlayer;\n\n	//FadeChildTrails\n	public Component[] canvasGroupNodes;\n \n    public List<VectorLine> trailRenderList = new List<VectorLine>();\n\n\n	// Use this for initialization\n	public void drawTrail (transform position) {\n		numberofTrails = trailRenderList.Count;\n		\n		pathLine = new VectorLine(\"Path_\" + numberofTrails +1, \n									new List<Vector3>(), \n									lineTex, \n									lineWidth, \n									LineType.Continuous);\n		pathLine.color = lineColor;\n		pathLine.textureScale = 1f;\n		if (fetchColor == true){\n			FetchColor();\n		}\n		trailRenderList.Add(pathLine);\n\n		StartCoroutine(SamplePoints ());\n	}\n\n	public void Fade(){\n		canvasGroupNodes = GetComponentsInChildren<CanvasGroup>();\n\n		foreach (CanvasGroup node in canvasGroupNodes){\n			if (node.name == \"TorpedoTrailsPanel\"){\n				}else{\n					node.alpha -= .1f;\n					if (node.alpha <= 0){\n					Destroy(node.gameObject);\n				}\n			}\n		} \n	}\n\n	void FetchColor () {\n        gameManager = GameObject.FindWithTag(\"gameManager\");\n        playerStateScript = gameManager.GetComponent<playerState>();\n\n        activePlayer = playerStateScript.activePlayer;\n\n        if (activePlayer == \"Player1\"){\n        	lineColor = playerStateScript.player1Color;\n        }else{\n        	lineColor = playerStateScript.player2Color;\n        }\n        pathLine.color = lineColor;\n	}\n	\n	IEnumerator SamplePoints (){\n		//Gets the position of the 3D object  at intervals(20 times a second)\n		bool running = true;\n		while (running){\n			pathLine.points3.Add (transform.position);\n			if (++pathIndex == maxPoints) {\n				running = false;\n			}\n			yield return new WaitForSeconds(.025f);\n\n			if (continuousUpdate){\n				pathLine.Draw3D();\n			}\n			if (initiator == true){\n				initiator = false;\n\n				pathLine.rectTransform.SetParent(transform);\n				//pathLine.rectTransform.gameObject.AddComponent<CanvasGroup>();\n				//fadeChildTrails.Fade();\n			}	\n		}\n	}\n}\n",
			"file": "Assets/scripts/TrailManager.cs",
			"file_size": 2545,
			"file_write_time": 130908827980000000,
			"settings":
			{
				"buffer_size": 2560,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/scripts/FadeChildTrails.cs",
			"settings":
			{
				"buffer_size": 447,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "rep:s",
		"selected_items":
		[
			[
				"rep:s",
				"SublimeREPL: Shell"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pyth",
				"SublimeREPL: Python"
			],
			[
				"rep",
				"SublimeREPL: Python"
			],
			[
				"repl",
				"SublimeREPL: Python"
			],
			[
				"git res",
				"Git: Reset (hard) HEAD"
			],
			[
				"gitre",
				"Git: Reset (hard) HEAD"
			],
			[
				"git rese",
				"Git: Reset (hard) HEAD"
			],
			[
				"git re",
				"Git: Reset (hard) HEAD"
			],
			[
				"gitp",
				"Git: Push"
			],
			[
				"gitqui",
				"Git: Quick Commit"
			],
			[
				"gitad",
				"Git: Add Current File"
			],
			[
				"git cus",
				"Git: Custom Command"
			],
			[
				"git cust",
				"Git: Custom Command"
			],
			[
				"git:cus",
				"Git: Custom Command"
			],
			[
				"gitP",
				"Git: Push"
			],
			[
				"gitq",
				"Git: Quick Commit"
			],
			[
				"git",
				"Git: Push"
			],
			[
				"git qu",
				"Git: Quick Commit"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"git:confi",
				"Git: Open Config Url"
			],
			[
				"gitcon",
				"Git: Open Config File"
			],
			[
				"git con",
				"Git: Open Config File"
			],
			[
				"git:co",
				"Git: Quick Commit"
			],
			[
				"gitadd",
				"Git: Add Current File"
			],
			[
				"gitst",
				"Git: Status"
			],
			[
				"gitpush",
				"Git: Push"
			],
			[
				"gitgui",
				"Git GUI Clients: GitX"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"gitco",
				"Git: Commit"
			],
			[
				"git:add ",
				"Git: Add..."
			],
			[
				"gitSt",
				"Git: Status"
			],
			[
				"gits",
				"Git: Status"
			],
			[
				"git gui",
				"Git GUI Clients: GitX"
			],
			[
				"git:gui",
				"Git: Gui"
			],
			[
				"gitx",
				"Git GUI Clients: GitX"
			],
			[
				"",
				"Git GUI Clients: GitX"
			],
			[
				"syntax: ht",
				"Set Syntax: HTML"
			],
			[
				"c#",
				"Set Syntax: C#"
			],
			[
				"syntax:py",
				"Set Syntax: Python"
			],
			[
				"synta:py",
				"Set Syntax: Python"
			],
			[
				"repl:py",
				"SublimeREPL: Python"
			],
			[
				"repl:",
				"SublimeREPL: Python"
			],
			[
				"syntax:X",
				"Set Syntax: XML"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"synt:xm",
				"Set Syntax: XML"
			],
			[
				"synt:py",
				"Set Syntax: Python"
			],
			[
				"sublimrge",
				"Sublimerge: View Diff"
			],
			[
				"sublimerge",
				"Sublimerge: View Diff"
			],
			[
				"synt:xml",
				"Set Syntax: XML"
			],
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"subli",
				"SublimeREPL: Python"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"repl:p",
				"SublimeREPL: Python"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"syn:py",
				"Set Syntax: Python"
			],
			[
				"may",
				"Maya: Send Selection to Maya"
			],
			[
				"maya",
				"Maya: Send Selection to Maya"
			],
			[
				"clas",
				"Snippet: New Class"
			],
			[
				"class",
				"Snippet: New Class"
			],
			[
				"cla",
				"Snippet: New Class"
			],
			[
				"Snippet: cl	",
				"Snippet: New Class"
			],
			[
				"Snippet: c",
				"Snippet: New Class"
			],
			[
				"sup",
				"SublimeREPL: Python"
			],
			[
				"sublimeREPL:Py",
				"SublimeREPL: Python"
			],
			[
				"Package Control: In",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: New Property"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/ianmankowski/gravityWars2D",
		"/Users/ianmankowski/gravityWars2D/Assets",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/GUI"
	],
	"file_history":
	[
		"/Users/ianmankowski/Google Drive/maya/scripts/RapidRig_Modular.mel",
		"/Users/ianmankowski/Desktop/cats/model/WIP/cat_models_10_31.ma",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/SomeClass.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/FadeChildTrails.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/destroyOnCollision.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/GUI/targetMemoryLifespan.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/GUI/createTargetMemory.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/TrailRender.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/GetPlayerColor.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/health.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/changeText.cs",
		"/Users/ianmankowski/Documents/GITS/PhysicsLearning/physicsLearning/Assets/Scripts/UniversalGravitation.cs",
		"/Users/ianmankowski/Documents/GITS/PhysicsLearning/physicsLearning/Assets/Scripts/PhysicsEngine.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/VectrosityDemos/Scripts/Path/DrawPath.js",
		"/Users/ianmankowski/Documents/GITS/PhysicsLearning/physicsLearning/Assets/Scripts/RocketEngine.cs",
		"/Users/ianmankowski/Documents/GITS/PhysicsLearning/physicsLearning/Assets/Scripts/FluidDrag.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/torpedoTrail.cs",
		"/Users/ianmankowski/sandbox/Assets/Vectrosity/Demos/Scripts/Path/DrawPath.js",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/GameManager.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/disableShipFields.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/createPlanets.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/DetachTorpedoTrail.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/getPlayerColor.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/playerState.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/GUI/Execute.cs",
		"/Users/ianmankowski/gravityWars2D/Library/metadata/2b/2b3bfc5d6c6c745eeb13291a7d820045",
		"/Users/ianmankowski/gravityWars2D/Library/metadata/36/36ca1d7bf3a5d466c98de4d08a2ae971",
		"/Users/ianmankowski/gravityWars2D/Library/metadata/42/422839510c96f4bd58d57b7055bad868",
		"/Users/ianmankowski/gravityWars2D/Library/metadata/eb/ebb64aaf184fa4ef092edf1c36811f54",
		"/Users/ianmankowski/gravityWars2D/Library/metadata/cf/cf6f7ef5a4c5d47fba813380d0c94cde",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/torpedo.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/GUI/drawLine.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/shipMeta.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/detachTorpedoTrail.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/getTorpedoTrail.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/enableScript.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/GameState.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/planetMeta.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/createPlanets2.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/initializePlanet.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/ForceFieldPro/2D/ForceField2D.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/rotate.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/debris.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/planetCollision.cs",
		"/Users/ianmankowski/sandbox/Assets/Editor/NewBehaviourScript.cs",
		"/Users/ianmankowski/Google Drive/maya/2016/Maya.env",
		"/Users/ianmankowski/sandbox/Assets/NewBehaviourScript.cs",
		"/Users/ianmankowski/gravityWars2D/gravityWars2D.sublime-project",
		"/Users/ianmankowski/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/ianmankowski/Downloads/SineNode/sineNode.py",
		"/Users/ianmankowski/Documents/GITS/gravityWars/gravityWars2D/untitled.sublime-project",
		"/Users/ianmankowski/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/GUI/drawLine.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/GUI/createTargetMemory.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/playerState.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/GUI/targetMemoryLifespan.cs",
		"/Users/ianmankowski/Library/Application Support/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/GUI/targetMemoryList.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/editor/createPlane.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/GUI/playerMemoryList.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/GUI/getAngle.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/GUI/gui.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/GUI/getText.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/rotate.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/VectorGrid/Scripts/VectorGrid.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/VectorGrid/Scripts/VectorGridForce.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/destroyOnCollision.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Standard%20Assets%20(Mobile)/Scripts/SmoothFollow2D.js",
		"/Users/ianmankowski/gravityWars2D/Assets/Standard%20Assets%20(Mobile)/Scripts/FollowTransform.js",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/Camera/torpedoPosition.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/Camera/gameCenter.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/GUI/displayIfPlayer.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/test/upVector.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/createPlanets.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/GUI/gui.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/mathTools.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/Camera/SmoothCamera2D.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/Camera/resetCamera.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/playerStats.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/SmoothCamera2D.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/Camera/SmoothCamera2D.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/Camera/gameCenter.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/Camera/torpedoPosition.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/Camera/shipPosition.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/Camera/resetCamera.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/SmoothCamera2D.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/gameCenter.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/torpedoPosition.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/Camera2DFollow.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/torpedo.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/GUI/getText.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/drawLine.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/getText.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/ForceFieldPro/Demo/Script/Camera%20Scripts/SmoothLookAt.js",
		"/Users/ianmankowski/gravityWars2D/Assets/ForceFieldPro/Demo/Script/Camera%20Scripts/SmoothFollow.js",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/mathTools.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/drawDebug.cs",
		"/Applications/Unity/Unity.app/Contents/UnityExtensions/Unity/GUISystem/4.6.0/UnityEngine.UI.dll",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/throwaway.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/throwaway.cs",
		"/Users/ianmankowski/Learning/Assets/scripts/ActiveStateToggler.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/changeText.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/gravity.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/torpedoPosition.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/sceneReset.cs",
		"/Users/ianmankowski/gravityWars2D/.gitignore",
		"/Users/ianmankowski/gravityWars2D/Assets/Vectrosity/Demos/Scripts/Highlight/RotateAroundY.js",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/keyboardInput.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/clickAction.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/enableChild.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/cameraInfo.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/gameBorders.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/drawDebug.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/gui.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/playerStats.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/changeText2.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/GUI/changeText.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/gameBorders.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/turnOff.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/Scripts/untested/CanvasGroupActivator.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/common/NewBehaviourScript.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/chargeFire.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/enableScript.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/playerControl.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/randomSize.cs",
		"/Users/ianmankowski/gravityWars2D/Assets/scripts/gravityWars2d.sublime-project",
		"/Users/ianmankowski/gravityWars2D/gravityWars2D.sublime-workspace",
		"/Users/ianmankowski/Learning/Assets/scripts/throwAway/checkNearbyA.cs"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			");\n",
			"canvasGroupsList",
			"canvasGroupNodes",
			"\"Player\"",
			"\"Player1\"",
			"\"Player\"",
			"\"Player1\"",
			"\"Player\"",
			"Player",
			"playerTag",
			"10",
			"startShip",
			"FixedUpdate",
			"drawLine",
			"how",
			"could",
			"terminal",
			"nodeDropGraphicsView",
			"graphicsView_wheelEvent",
			"scale",
			"setupUI",
			"getMayaWindow",
			"pri ",
			"pri",
			"priority",
			"activeDirectory",
			"ListWidget",
			"QListWidget",
			"ListWidget",
			"TestButton",
			"mainWidget",
			"box",
			"mainWidget",
			"tranlation",
			"QAbstract",
			"scroll",
			"chowder",
			"SceneInfoWin",
			"pymel.core",
			"radius",
			"f",
			"Wheels",
			"Doors",
			"form",
			"getMayaWindow",
			"ListExample",
			"PrimitiveUI",
			"applejacks",
			"uic",
			"getMainWindow",
			"sip"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\"Player1\"",
			"\"Player\"",
			"\"Player1\"",
			"\"Player\"",
			"\"Player1\"",
			"self.activeDirectory",
			"sortedList",
			"guiWin",
			"cmds",
			"diameter",
			"createUI"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/scripts/TrailRender.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2698,
						"regions":
						{
						},
						"selection":
						[
							[
								802,
								874
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 103.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/scripts/CreateTrail.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 396,
						"regions":
						{
						},
						"selection":
						[
							[
								388,
								388
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Assets/scripts/TrailManager.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2560,
						"regions":
						{
						},
						"selection":
						[
							[
								897,
								897
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Assets/scripts/FadeChildTrails.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 447,
						"regions":
						{
						},
						"selection":
						[
							[
								444,
								158
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 292.0
	},
	"output.rope_python_documentation":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "gravityWars2D.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"/Users/ianmankowski/gravityWars2D/gravityWars2D.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 304.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
